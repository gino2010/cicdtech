# 开发环境测试使用单节点，用于MQ实验测试
version: '3'
services:
  rabbitmq:
    container_name: "rabbitmq"
    image: "rabbitmq:3.7.8-management-alpine"
    restart: "always"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - mq-network

  activemq:
    container_name: "activemq"
    image: webcenter/activemq:latest
    restart: "always"
    ports:
      - "8161:8161"
      - "61613:61613"
      - "61616:61616"
    environment:
      ACTIVEMQ_NAME: amq
      ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT: 'True'
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: admin
    networks:
      - mq-network

  zookeeper:
    container_name: "zookeeper"
    image: "wurstmeister/zookeeper"
    restart: "always"
    ports:
      - "2181:2181"
    networks:
      - mq-network

  kafka:
    container_name: "kafka"
    image: "wurstmeister/kafka"
    restart: "always"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: $CF_HOST_IP
      KAFKA_CREATE_TOPICS: "Topic1:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - mq-network

  kafkamanger:
    container_name: "kafka-manager"
    image: "deric/kafka-manager:1.3.3.18"
    restart: "always"
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
    depends_on:
      - zookeeper
    networks:
      - mq-network

networks:
  mq-network:
    driver: bridge